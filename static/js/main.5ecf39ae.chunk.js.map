{"version":3,"sources":["components/philly-ipsum/words.js","components/Landing.js","components/Portfolio.js","components/philly-ipsum/components/Header/Header.js","components/philly-ipsum/components/Footer/Footer.js","components/philly-ipsum/components/ParagraphSelect/ParagraphSelect.js","components/philly-ipsum/components/SentenceSelect/SentenceSelect.js","components/philly-ipsum/components/Sidebar/Sidebar.js","components/philly-ipsum/components/Generator/Generator.js","components/philly-ipsum/PhillyIpsum.js","components/Menu.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","words","Landing","className","React","Component","href","HeaderComponent","FooterComponent","ParagraphSelectComponent","controlId","componentClass","value","this","props","numParagraphs","onChange","updateParagraphs","SentenceSelectComponent","numSentences","updateSentences","SidebarComponent","action","ParagraphSelect","SentenceSelect","GeneratorComponent","id","dangerouslySetInnerHTML","__html","text","ipsumApp","state","ipsum","bind","setState","e","target","generate","phrases","i","paragraph","j","sentence","numWords","Math","floor","random","k","length","charAt","toUpperCase","slice","Header","Row","Col","xs","md","Sidebar","Generator","Footer","Menu","useState","isOpen","setOpen","toggleMenu","useLocation","pathname","replace","onClick","to","App","path","exact","component","Portfolio","PhillyIpsum","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ecf39ae.chunk.js","sourcesContent":["module.exports = {\r\n    words: [\"Clark Park LARPers\",\"Arctic Splash\",\"citywide\",\"coldies\",\"so sad sometimes\",\"Everybody Hits\",\"Golden Tea House\",\"fuck Tom Brady\",\"Rocky\",\"Broad Street\",\"Boathouse Row\",\"crick\",\"Mischief Night\",\"go Birds\",\"scrapple\",\"SEPTA\",\"wooder\",\"Gritty\",\"parking cone\",\"greased pole\",\"soft pretzel\",\"youse guys\",\"downa shore\",\"trust the process\",\"jawn\",\"anymore\",\"water ice\",\"death to Hitchbot\",\"Schuylkill\",\"Free Meek Mill\",\"Tierra Whack\",\"Hop Along\",\"Nam Son\",\"punch a police horse\",\"BONER 4EVER\",\"roast pork\",\"E-A-G-L-E-S\",\"Kurt Vile\",\"graffiti pier\",\"Baltimore Avenue sinkhole\",\"pierogies\",\"Wawa\",\"hoagiefest\",\"hoagie\",\"Hurricane Schwartz\",\"steel furnace\",\"do attend\",\"Terry Gross\",\"Johnny Doc\"\r\n    ]\r\n}\r\n","import React from 'react';\nimport './Landing.css';\n\nclass Landing extends React.Component {\nrender() {\n\t\treturn (\n\t\t\t<div className=\"Landing-wrapper\">\n\t\t<div className=\"Landing-header\">\n\t\t<h1>\n\t\tLarissa Sapko\n\t\t</h1>\n\t\t<h2>\n\t\tweb\n\t\t<br/> \n\t\tdesign\n\t\t</h2>\n\t\t<span className=\"Big-and\">\n\t\t<p>\n\t\t&amp;\n\t\t</p>\n\t\t</span>\n\t\t<h2>\n\t\tdevelopment\n\t\t</h2>\n\t\t</div>\n\t\t</div>\n\t\t);\n\t\t}\n\n}\nexport default Landing;","import React from 'react';\nimport './Portfolio.css';\n\nclass Landing extends React.Component {\nrender() {\n\t\treturn (\n\t\t\t<div className=\"Work-wrapper\">\n\t\t<div className=\"Work-header\">\n\t\t<h1>\n\t\tWork\n\t\t</h1>\n\t\t<h2>\n\t\t<a className=\"Work-link\" href=\"http://acommonspace.org/\">Commonspace</a>\n\t\t</h2>\n\t\t<h2>\n\t\t<a className =\"Work-link\" href=\"https://www.inquirer.com/news/philadelphia/april-fools-pranks-jokes-philadelphia-moreys-piers-gritty-20190401.html\">Whitty</a>\n\t\t</h2>\n\t\t<h2>\n\t\t<a className=\"Work-link\" href=\"https://publicinterestgrfx.org/\">Public Interest GRFX</a>\n\t\t</h2>\n\t\t</div>\n\t\t</div>\n\t\t);\n\t\t}\n\n}\nexport default Landing;","import React, { Component } from 'react';\r\n\r\n\r\nclass HeaderComponent extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"header-container\">\r\n          <span className=\"main-header\">Philly Ipsum</span>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass FooterComponent extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"footer-container\">\r\n          <div className=\"sub-heading\"><em>Adapted from Sanctum Ipsum by <a href=\"http://graysonhicks.com\">Grayson Hicks</a></em></div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FooterComponent;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass ParagraphSelectComponent extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"paragraph-select-container\">\r\n            <div controlId=\"formControlsSelect\">\r\n             <label>Number of Paragraphs:</label>\r\n             <select componentClass=\"select\"value={this.props.numParagraphs}  onChange={this.props.updateParagraphs}>\r\n               <option value=\"1\">1</option>\r\n               <option value=\"2\">2</option>\r\n               <option value=\"3\">3</option>\r\n               <option value=\"4\">4</option>\r\n               <option value=\"5\">5</option>\r\n             </select>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ParagraphSelectComponent;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass SentenceSelectComponent extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"sentence-select-container\">\r\n            <div controlId=\"formControlsSelect\">\r\n             <label>Number of Sentences per Paragraph:</label>\r\n             <select componentClass=\"select\" value={this.props.numSentences} onChange={this.props.updateSentences}>\r\n               <option value=\"1\">1</option>\r\n               <option value=\"2\">2</option>\r\n               <option value=\"3\">3</option>\r\n               <option value=\"4\">4</option>\r\n               <option value=\"5\">5</option>\r\n             </select>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SentenceSelectComponent;\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nimport ParagraphSelectComponent from \"../ParagraphSelect/ParagraphSelect\";\r\nimport SentenceSelectComponent from \"../SentenceSelect/SentenceSelect\";\r\n\r\nclass SidebarComponent extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"sidebar-container\">\r\n\t\t\t\t<form action=\"\">\r\n\t\t\t\t\t<ParagraphSelectComponent updateParagraphs={this.props.updateParagraphs} numParagraphs={this.props.numParagraphs} />\r\n\t\t\t\t\t<SentenceSelectComponent updateSentences={this.props.updateSentences} numSentences={this.props.numSentences} />\r\n\t\t\t\t\t{/* <Button id=\"copy-button\" bsSize=\"large\">Copy!</Button> */}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SidebarComponent;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass GeneratorComponent extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"generator-container\">\r\n            <div id=\"lorem-container\" dangerouslySetInnerHTML={{__html: this.props.text}}></div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GeneratorComponent;\r\n","import React, { Component } from \"react\";\n\n\nimport { Row, Col } from \"react-bootstrap\";\nimport \"./ipsum.css\";\n\nimport HeaderComponent from \"./components/Header/Header\";\nimport FooterComponent from \"./components/Footer/Footer\";\nimport SidebarComponent from \"./components/Sidebar/Sidebar\";\nimport GeneratorComponent from \"./components/Generator/Generator\";\n\nimport { words } from \"./words\";\n\n\nclass ipsumApp extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tnumParagraphs: 1,\n\t\t\tnumSentences: 5,\n\t\t\ttext: this.ipsum(1, 5, words)\n\t\t};\n\n\t\t// code for server/API version\n\t\t//this.search = this.search.bind(this);\n\n\t\tthis.updateParagraphs = this.updateParagraphs.bind(this);\n\t\tthis.updateSentences = this.updateSentences.bind(this);\n\t}\n\n\tgenerate() {\n\t\t// generate ipsum by passing in sentence and paragraph values from state and the words array\n\t\t//(words can be changed by denomination later)\n\t\t// text state is then passed down to generator component in props\n\t\tthis.setState({\n\t\t\ttext: this.ipsum(this.state.numParagraphs, this.state.numSentences, words)\n\t\t});\n\t}\n\n\tupdateParagraphs(e) {\n\t\t// set value from paragraph select in state\n\t\tthis.setState({ numParagraphs: e.target.value }, this.generate);\n\t}\n\n\tupdateSentences(e) {\n\t\t// set value from sentence select in state\n\t\tthis.setState({ numSentences: e.target.value }, this.generate);\n\t}\n\n\n\tipsum(numParagraphs, numSentences, phrases) {\n\t\t// start text placeholder\n\t\tvar text = \"\";\n\t\tif (numParagraphs < 1) {\n\t\t\treturn text;\n\t\t}\n\t\t// build each paragraph based on user input\n\t\tfor (var i = 0; i < numParagraphs; i++) {\n\t\t\t// start paragraph placeholder\n\t\t\tvar paragraph = \"\";\n\t\t\t// build each sentence based on user input\n\t\t\tfor (var j = 0; j < numSentences; j++) {\n\t\t\t\t// sentence placeholder\n\t\t\t\tvar sentence = \"\";\n\t\t\t\t// 10 - 15 words per sentence, randomly, then loop that many times, grabbing random word\n\t\t\t\tvar numWords = Math.floor(Math.random() * 1 + 10);\n\n\t\t\t\tfor (var k = 0; k < numWords; k++) {\n\t\t\t\t\t// word placeholder\n\t\t\t\t\tvar word = \"\";\n\t\t\t\t\t// get random index for words array\n\t\t\t\t\tvar wordNum = Math.floor(Math.random() * phrases.length);\n\t\t\t\t\tword = phrases[wordNum];\n\t\t\t\t\t// if its not the first word, put a space in front of it\n\t\t\t\t\tif (k !== 0) {\n\t\t\t\t\t\tsentence += \" \";\n\t\t\t\t\t}\n\t\t\t\t\t// add word to sentence placeholder and run word choosing loop again\n\t\t\t\t\tsentence += word;\n\t\t\t\t}\n\t\t\t\t// when word loop complete, punctuate sentence\n\t\t\t\tsentence += \".\";\n\t\t\t\t// capitalized first letter of the sentence\n\t\t\t\tsentence = sentence.charAt(0).toUpperCase() + sentence.slice(1);\n\t\t\t\t// add the sentence and space after to the paragraph\n\t\t\t\tparagraph += sentence;\n\t\t\t\tparagraph += \" \";\n\t\t\t}\n\t\t\t// when sentence loop complete, added p tags for formatting and insert into text placeholder\n\t\t\tparagraph = \"<p>\" + paragraph + \"</p>\";\n\t\t\ttext += paragraph;\n\t\t}\n\t\treturn text;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"IpsumApp\">\n\t\t\t\t<HeaderComponent />\n\t\t\t\t<div className=\"IpsumApp-container\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs={12} md={4}>\n\t\t\t\t\t\t\t<SidebarComponent\n\t\t\t\t\t\t\t\tupdateParagraphs={this.updateParagraphs}\n\t\t\t\t\t\t\t\tupdateSentences={this.updateSentences}\n\t\t\t\t\t\t\t\tnumParagraphs={this.state.numParagraphs}\n\t\t\t\t\t\t\t\tnumSentences={this.state.numSentences}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs={12} md={8}>\n\t\t\t\t\t\t\t<GeneratorComponent text={this.state.text} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t\t<FooterComponent />\n\t\t\t</div>\n\t\t);\n\t}\n\t\n}\n\nexport default ipsumApp;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  useLocation\n} from \"react-router-dom\";\n\n\nconst Menu = () => {\n\n\nconst [isOpen, setOpen] = useState(false);\n\n    const toggleMenu = () => {\n    setOpen(!isOpen);\n};\n\nconst location = useLocation();\nlet pathname = location.pathname;\nlet className = pathname.replace('/', \"\");\nconst NavStyling = () =>\n{\n  console.log(className);\n /*switch(pathname) { \n  case '/': return 'landing';\n  case '/work': return 'work';\n  case '/phillyipsum': return 'ipsum';\n}*/\n\n}\n\n\treturn (\n\n\n<div>\n        <nav className={className}>\n          <button onClick={toggleMenu} className=\"menuBtn\">Menu</button>\n          <ul className={isOpen ? \"open\" : \"closed\"}>\n          <Link to=\"/\">\n            <li onClick={toggleMenu}>Home\n            </li>\n            </Link>\n            <Link to=\"/work\">\n            <li onClick={toggleMenu}>Work\n            </li>\n            </Link>\n            <Link to=\"/phillyipsum\">\n            <li onClick={toggleMenu}>Philly Ipsum\n            </li>\n            </Link>\n          </ul>\n        </nav>\n        </div>\n\n   \n    );\n}\n\nexport default Menu;","import React from 'react';\nimport Landing from './Landing';\nimport Portfolio from './Portfolio';\nimport PhillyIpsum from './philly-ipsum/PhillyIpsum';\nimport Menu from './Menu';\nimport './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t<div className=\"body\">\n\t\t\t<Menu />\n\t\t\t<Switch>\n\t\t<div className=\"landing-wrapper\" id=\"appGoesHere\">\n\t\t<Route path=\"/\" exact component={Landing} />\n\t\t<Route path=\"/work\" component={Portfolio} />\n\t\t<Route path=\"/phillyipsum\" component={PhillyIpsum}/>\n\t\t</div>\n\t\t</Switch>\n\t\t</div>\n\t\t</Router>\n\t\t);\n\t\t}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/App.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}